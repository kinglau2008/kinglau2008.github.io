<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[CentOS安装hadoop2.6.0-单机]]></title>
      <url>%2F2017%2F05%2F04%2FCentOS%E5%AE%89%E8%A3%85hadoop2-6-0-%E5%8D%95%E6%9C%BA%2F</url>
      <content type="text"><![CDATA[一、环境环境准备 CentOS 7 CDH5：基于Apache Hadoop 2.6.0版本开发 jdk1.8 配置SSH无密码登录生成秘钥123456789101112131415161718[kinglau@localhost ~]$ ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsaGenerating public/private dsa key pair.Your identification has been saved in /home/kinglau/.ssh/id_dsa.Your public key has been saved in /home/kinglau/.ssh/id_dsa.pub.The key fingerprint is:6b:c8:3e:c7:34:23:38:e5:83:ea:a9:8f:f2:17:80:51 kinglau@localhost.localdomainThe key&apos;s randomart image is:+--[ DSA 1024]----+| .E ||. || o ||. . . || . = S || =.+.+. || . oo=oo ||........o ||+==. .o |+-----------------+ 此时会在~/.ssh下生成两个文件：id_rsa和id_rsa.pub，前者为私钥，后者为公钥。 下面我们将公钥追加到authorized_keys中，它用户保存所有允许以当前用户身份登录到ssh客户端用户的公钥内容 1[kinglau@localhost ~]$ cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys 验证输入下面命令，可看到不用输入密码即可登录 1[kinglau@localhost ~]$ ssh localhost 如果仍要求输入密码 1[kinglau@localhost ~]$ vi /etc/ssh/sshd_config 找到以下内容，并去掉注释符”#“ 123RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys 修改authorized_keys的权限 1[kinglau@localhost ~]$ chmod 600 ~/.ssh/authorized_keys 二、下载hadoop下载12[kinglau@localhost /]$ cd /usr/local[kinglau@localhost local]$ wget http://archive.cloudera.com/cdh5/cdh/5/hadoop-2.6.0-cdh5.11.0.tar.gz 解压解压到hadoop目录 目录结构 bin：Hadoop最基本的管理脚本和使用脚本所在目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop。 etc：Hadoop配置文件所在的目录，包括core-site.xml、hdfs-site.xml、mapred-site.xml等从Hadoop 1.0继承而来的配置文件和yarn-site.xml等Hadoop 2.0新增的配置文件。 include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序。 lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用。 libexec：各个服务对应的shell配置文件所在目录，可用于配置日志输出目录、启动参数（比如JVM参数）等基本信息。 sbin：Hadoop管理脚本所在目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本。 share：Hadoop各个模块编译后的jar包所在目录。 三、配置 hadoop-env.sh 此处按实际的java安装路径配置 1export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-2.b15.el7_3.x86_64 以下四个XML配置文件，需在标签和之间增加配置项 mapred-site.xml 1234&lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt;&lt;/property core-site.xml 123456789101112&lt;property&gt; &lt;name&gt;fs.default.name&lt;/name&gt; &lt;value&gt;hdfs://localhost:8020&lt;/value&gt;&lt;/property&gt;&lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;/usr/local/hadoop/dfs/name&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;/usr/local/hadoop/dfs/data&lt;/value&gt; &lt;/property&gt; yarn-site.xml 1234&lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt; hdfs-site.xml： 1234&lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt;&lt;/property&gt; 四、启动服务 格式化HDFS： 1[kinglau@localhost hadoop]$ bin/hadoop namenode -format 启动HDFS： 1[kinglau@localhost hadoop]$ sbin/ start-dfs.sh 启动YARN： 1[kinglau@localhost hadoop]$ sbin/start-yarn.sh 五、验证查看进程1234567[kinglau@localhost hadoop]$ sudo jps5712 Jps4833 NameNode5122 SecondaryNameNode4949 DataNode5545 NodeManager5263 ResourceManager 查看web页面访问URL地址：http://localhost:8088， 浏览yarn web页面 访问URL地址：http://localhost:50070， 浏览hdfs web页面 运行wordcountdfs上创建input目录 1[kinglau@localhost hadoop]$ bin/hadoop fs -mkdir -p input 把hadoop目录下的README.txt拷贝到dfs新建的input里 1[kinglau@localhost hadoop]$ bin/hadoop fs -copyFromLocal README.txt input 运行wordcount实例 1[kinglau@localhost hadoop]$ bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0-cdh5.11.0.jar wordcount input output 查看结果 1[kinglau@localhost hadoop]$ bin/hadoop fs -cat output/* 如果再次执行，会提示Output directory hdfs://localhost:8020/user/kinglau/output already exists，需要删除output目录 1[kinglau@localhost hadoop]$ bin/hadoop fs -rmr output]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CentOS安装OpenResty]]></title>
      <url>%2F2017%2F04%2F25%2FCentOS%E5%AE%89%E8%A3%85OpenResty%2F</url>
      <content type="text"><![CDATA[一、安装准备安装OpenResty之前，您必须将这些库 perl 5.6.1+, libreadline, libpcre, libssl安装在您的电脑之中。 安装perl支持yum install perl* (yum安装perl相关支持)yum install cpan (perl需要的程序库，需要cpan的支持) 安装其他yum install readline-devel pcre-devel openssl-devel gcc 二、构建 OpenResty下载从下载页 Download(https://openresty.org/cn/download.html)下载最新的 OpenResty® 源码包，并且像下面的示例一样将其解压:tar -xzvf openresty-VERSION.tar.gz VERSION 的地方替换成您下载的源码包的版本号，比如说 1.11.2.2。 然后在进入 openresty-VERSION/ 目录, 然后输入以下命令配置: ./configure默认, –prefix=/usr/local/openresty 程序会被安装到/usr/local/openresty目录。 您可以指定各种选项，比如12345./configure --prefix=/opt/openresty \ --with-luajit \ --without-http_redis2_module \ --with-http_iconv_module \ --with-http_postgres_module 试着使用 ./configure –help 查看更多的选项。 配置文件（./configure script）运行出错可以到 build/nginx-VERSION/objs/autoconf.err 找到。VERSION 必须与OpenResty(https://openresty.org/cn/openresty.html)版本号相对应, 比如 1.11.2.2。 make您可以使用下面的命令来编译：1make 如果您的电脑支持多核 make 工作的特性, 您可以这样编译:1make -j2 make install如果前面的步骤都没有问题的话,您可以使用下面的命令安装l OpenResty(#)(https://openresty.org/cn/openresty.html)到您的系统之中： 1make install 在 Linux,通常包括 sudo来执行root权限做的事情。 三、运行12[root@localhost openresty]# cd /usr/local/openresty/nginx[root@localhost nginx]# sbin/nginx 四、确认是否运行成功执行下面命令1[root@localhost nginx]# curl http://localhost 输出如下内容，说明已经成功运行1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Welcome to OpenResty!&lt;/title&gt;&lt;style&gt; body &#123; width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to OpenResty!&lt;/h1&gt;&lt;p&gt;If you see this page, the OpenResty web platform is successfully installed andworking. Further configuration is required.&lt;/p&gt;&lt;p&gt;For online documentation and support please refer to&lt;a href="https://openresty.org/"&gt;openresty.org&lt;/a&gt;.&lt;br/&gt;&lt;p&gt;&lt;em&gt;Thank you for flying OpenResty.&lt;/em&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 或者在浏览器中输入http://localhost]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F04%2F24%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
